/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Mainapp;

import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.MessagingException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lalo_
 */
public class SenderMenu extends javax.swing.JFrame {

    public static String EmailSF = "";
    public static String PassWSF = "";
    
    private File[] selectedFiles;
    
    /**
     * Creates new form SenderMenu
     */

    public SenderMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField_Emails = new javax.swing.JTextField();
        jTextField_Subject = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_Message = new javax.swing.JTextArea();
        jButton_Files = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_Files = new javax.swing.JTable();
        jButton_SEND = new javax.swing.JButton();
        jButton_AddCC = new javax.swing.JButton();
        jButton_EraseCC = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable_Receivers = new javax.swing.JTable();
        jDesktopPane2 = new javax.swing.JDesktopPane();
        jButton_Contacs = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_Contacts = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jTextField_SubjectC = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea_MessageC = new javax.swing.JTextArea();
        jButton_FilesC = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable_FilesC = new javax.swing.JTable();
        jButton_SendC = new javax.swing.JButton();
        jTextField_AddC = new javax.swing.JTextField();
        jButton_EraseC = new javax.swing.JButton();
        jDesktopPane3 = new javax.swing.JDesktopPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable_Messages = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jDesktopPane4 = new javax.swing.JDesktopPane();
        jButton_SAFELOCK = new javax.swing.JButton();
        jButton_OPTIONS = new javax.swing.JButton();
        jButton_LOGOUT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sender Menu");
        setResizable(false);

        jDesktopPane1.setBackground(new java.awt.Color(102, 102, 102));

        jLabel5.setText("To:");

        jLabel1.setText("Subject:");

        jTextField_Emails.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_EmailsKeyPressed(evt);
            }
        });

        jLabel2.setText("Message:");

        jTextArea_Message.setColumns(20);
        jTextArea_Message.setRows(5);
        jScrollPane1.setViewportView(jTextArea_Message);

        jButton_Files.setBackground(new java.awt.Color(0, 0, 255));
        jButton_Files.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jButton_Files.setText("Add Files");
        jButton_Files.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_FilesActionPerformed(evt);
            }
        });

        jTable_Files.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Files:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable_Files);

        jButton_SEND.setBackground(new java.awt.Color(0, 0, 255));
        jButton_SEND.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jButton_SEND.setText("Send");
        jButton_SEND.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SENDActionPerformed(evt);
            }
        });

        jButton_AddCC.setBackground(new java.awt.Color(0, 0, 204));
        jButton_AddCC.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jButton_AddCC.setText("Add");
        jButton_AddCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AddCCActionPerformed(evt);
            }
        });
        jButton_AddCC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton_AddCCKeyPressed(evt);
            }
        });

        jButton_EraseCC.setBackground(new java.awt.Color(0, 0, 204));
        jButton_EraseCC.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jButton_EraseCC.setText("Erase");
        jButton_EraseCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_EraseCCActionPerformed(evt);
            }
        });

        jTable_Receivers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Receivers:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable_Receivers);

        jDesktopPane1.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jTextField_Emails, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jTextField_Subject, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButton_Files, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButton_SEND, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButton_AddCC, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButton_EraseCC, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jScrollPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addGap(178, 178, 178)
                .addComponent(jButton_SEND)
                .addGap(177, 177, 177))
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_Subject))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_Files))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField_Emails, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                                        .addComponent(jButton_AddCC)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton_EraseCC)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextField_Emails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_AddCC)
                            .addComponent(jButton_EraseCC)))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField_Subject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton_Files)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_SEND)
                .addGap(37, 37, 37))
        );

        jTabbedPane1.addTab("Direct Message", jDesktopPane1);

        jDesktopPane2.setBackground(new java.awt.Color(153, 153, 153));

        jButton_Contacs.setBackground(new java.awt.Color(0, 0, 204));
        jButton_Contacs.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jButton_Contacs.setText("Add Contact");
        jButton_Contacs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ContacsActionPerformed(evt);
            }
        });

        jTable_Contacts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"roberd.999117@gmail.com"}
            },
            new String [] {
                "Contacts:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_Contacts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_ContactsMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable_Contacts);

        jLabel3.setText("Subject:");

        jLabel4.setText("Message:");

        jTextArea_MessageC.setColumns(20);
        jTextArea_MessageC.setRows(5);
        jTextArea_MessageC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextArea_MessageCKeyPressed(evt);
            }
        });
        jScrollPane5.setViewportView(jTextArea_MessageC);

        jButton_FilesC.setBackground(new java.awt.Color(0, 0, 204));
        jButton_FilesC.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jButton_FilesC.setText("Add Files");
        jButton_FilesC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_FilesCActionPerformed(evt);
            }
        });

        jTable_FilesC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Files:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jTable_FilesC);

        jButton_SendC.setBackground(new java.awt.Color(0, 0, 204));
        jButton_SendC.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jButton_SendC.setText("Send");
        jButton_SendC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SendCActionPerformed(evt);
            }
        });

        jTextField_AddC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_AddCKeyPressed(evt);
            }
        });

        jButton_EraseC.setBackground(new java.awt.Color(0, 0, 153));
        jButton_EraseC.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jButton_EraseC.setText("Erase");
        jButton_EraseC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_EraseCActionPerformed(evt);
            }
        });

        jDesktopPane2.setLayer(jButton_Contacs, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jScrollPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jTextField_SubjectC, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jScrollPane5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jButton_FilesC, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jScrollPane6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jButton_SendC, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jTextField_AddC, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jButton_EraseC, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane2Layout = new javax.swing.GroupLayout(jDesktopPane2);
        jDesktopPane2.setLayout(jDesktopPane2Layout);
        jDesktopPane2Layout.setHorizontalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(jDesktopPane2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_SubjectC))
                    .addGroup(jDesktopPane2Layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_SendC)
                        .addGap(69, 69, 69))
                    .addGroup(jDesktopPane2Layout.createSequentialGroup()
                        .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jButton_FilesC)))
                        .addGap(0, 1, Short.MAX_VALUE))
                    .addGroup(jDesktopPane2Layout.createSequentialGroup()
                        .addComponent(jTextField_AddC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_Contacs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_EraseC)))
                .addContainerGap())
        );
        jDesktopPane2Layout.setVerticalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Contacs)
                    .addComponent(jTextField_AddC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_EraseC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField_SubjectC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_FilesC)
                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_SendC)
                        .addGap(67, 67, 67))
                    .addGroup(jDesktopPane2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(34, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab("Contacts", jDesktopPane2);

        jDesktopPane3.setBackground(new java.awt.Color(204, 204, 204));

        jTable_Messages.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Email:", "Subject:", "Text:", "Files:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(jTable_Messages);

        jLabel6.setText("Last Messages:");

        jDesktopPane3.setLayer(jScrollPane7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane3Layout = new javax.swing.GroupLayout(jDesktopPane3);
        jDesktopPane3.setLayout(jDesktopPane3Layout);
        jDesktopPane3Layout.setHorizontalGroup(
            jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane3Layout.createSequentialGroup()
                .addContainerGap(7, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jDesktopPane3Layout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDesktopPane3Layout.setVerticalGroup(
            jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane3Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(69, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Messages", jDesktopPane3);

        jDesktopPane4.setBackground(new java.awt.Color(204, 204, 255));

        javax.swing.GroupLayout jDesktopPane4Layout = new javax.swing.GroupLayout(jDesktopPane4);
        jDesktopPane4.setLayout(jDesktopPane4Layout);
        jDesktopPane4Layout.setHorizontalGroup(
            jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 427, Short.MAX_VALUE)
        );
        jDesktopPane4Layout.setVerticalGroup(
            jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 506, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Social Media", jDesktopPane4);

        jButton_SAFELOCK.setBackground(new java.awt.Color(0, 51, 255));
        jButton_SAFELOCK.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jButton_SAFELOCK.setText("Safe Lock");
        jButton_SAFELOCK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SAFELOCKActionPerformed(evt);
            }
        });

        jButton_OPTIONS.setBackground(new java.awt.Color(0, 0, 255));
        jButton_OPTIONS.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jButton_OPTIONS.setText("Options");
        jButton_OPTIONS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_OPTIONSActionPerformed(evt);
            }
        });

        jButton_LOGOUT.setBackground(new java.awt.Color(0, 0, 204));
        jButton_LOGOUT.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jButton_LOGOUT.setText("Log out");
        jButton_LOGOUT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_LOGOUTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton_SAFELOCK)
                        .addGap(85, 85, 85)
                        .addComponent(jButton_OPTIONS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_LOGOUT)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_SAFELOCK)
                    .addComponent(jButton_OPTIONS)
                    .addComponent(jButton_LOGOUT))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_OPTIONSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_OPTIONSActionPerformed
        // TODO add your handling code here:
        OptionsMenu OpM = new OptionsMenu();
        OpM.setVisible(true);
    }//GEN-LAST:event_jButton_OPTIONSActionPerformed

    private void jButton_SAFELOCKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SAFELOCKActionPerformed
        // TODO add your handling code here:
        SafeLock sf = new SafeLock();
        LogInMenu lim = new LogInMenu();
        
        EmailSF = lim.EmailLogged;
        PassWSF = lim.PasswordLogged;
 
        sf.setVisible(true);
        
        dispose();
    }//GEN-LAST:event_jButton_SAFELOCKActionPerformed

    private void jButton_LOGOUTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LOGOUTActionPerformed
        // TODO add your handling code here:
        LogInMenu lim = new LogInMenu();
        lim.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton_LOGOUTActionPerformed

    private void jButton_SENDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SENDActionPerformed
        // TODO add your handling code here:
        LogInMenu lim = new LogInMenu();
        EmailSF = lim.EmailLogged;//"tadprgs@gmail.com";
        PassWSF = lim.PasswordLogged;//"jerbeftltmvxfqam";
        //JOptionPane.showMessageDialog(null, EmailSF);
        //JOptionPane.showMessageDialog(null, PassWSF);
        
        if( 0 < this.jTable_Files.getRowCount())
        {
            for(int i = 0; i < this.jTable_Receivers.getRowCount();i++) 
            {
                //JOptionPane.showMessageDialog(null, this.jTable_Receivers.getValueAt(i, 0).toString());
                try {
                    Emails.GmailSender(EmailSF, PassWSF, this.jTextField_Subject.getText()
                    , this.jTextArea_Message.getText(), 
                    this.jTable_Receivers.getValueAt(i, 0).toString(),selectedFiles 
                    );
                    DefaultTableModel Mm = (DefaultTableModel) this.jTable_Messages.getModel();
                    Mm.addRow(new Object[]{this.jTable_Contacts.getValueAt(i, 0).toString(),this.jTextField_SubjectC.getText(),
                    this.jTextArea_MessageC.getText(),this.jTable_FilesC.getValueAt(i, 0).toString()});
                } catch (MessagingException ex) {
                    Logger.getLogger(SenderMenu.class.getName()).log(Level.SEVERE, null, ex);
                } 
            }
        }else
        {
            for(int i = 0; i < this.jTable_Receivers.getRowCount();i++) 
            {
                //JOptionPane.showMessageDialog(null, this.jTable_Receivers.getValueAt(i, 0).toString());
                try {
                    Emails.GmailSender(EmailSF, PassWSF, this.jTextField_Subject.getText()
                    , this.jTextArea_Message.getText(), 
                    this.jTable_Receivers.getValueAt(i, 0).toString());
                    DefaultTableModel Mm = (DefaultTableModel) this.jTable_Messages.getModel();
                    Mm.addRow(new Object[]{this.jTable_Contacts.getValueAt(i, 0).toString(),this.jTextField_SubjectC.getText(),
                    this.jTextArea_MessageC.getText(),this.jTable_FilesC.getValueAt(i, 0).toString()});
                } catch (MessagingException ex) {
                    Logger.getLogger(SenderMenu.class.getName()).log(Level.SEVERE, null, ex);
                } 
            }
            //Probar esto:
            this.jTextField_Emails.setText("");
            this.jTextField_Subject.setText("");
            this.jTextArea_Message.setText("");
            for(int i = 0; i < this.jTable_Files.getRowCount(); i++)
            {
                this.jTable_Files.removeRowSelectionInterval(i, 0);
            }
            //Fin de lo que se va a probar.
        }
    }//GEN-LAST:event_jButton_SENDActionPerformed

    private void jButton_EraseCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_EraseCCActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelR = (DefaultTableModel) this.jTable_Receivers.getModel();
        if(this.jTable_Receivers.getSelectedRow() != -1)
        {
            modelR.removeRow(this.jTable_Receivers.getSelectedRow());
        }else
        {
            JOptionPane.showMessageDialog(null, "Select the Email you want to erase!");
        }
    }//GEN-LAST:event_jButton_EraseCCActionPerformed

    private void jButton_AddCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AddCCActionPerformed
        // TODO add your handling code here:
            DefaultTableModel modelR = (DefaultTableModel) this.jTable_Receivers.getModel();
            modelR.addRow(new Object[]{this.jTextField_Emails.getText()});
            this.jTextField_Emails.setText(null);
    }//GEN-LAST:event_jButton_AddCCActionPerformed

    private void jButton_FilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_FilesActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) this.jTable_Files.getModel();
        
        JFileChooser Fc = new JFileChooser();
        String Row = "";
        Fc.setDialogTitle("Files:");
        Fc.setMultiSelectionEnabled(true);
        int R = Fc.showOpenDialog(null);
        if(R == JFileChooser.APPROVE_OPTION)
        {
            selectedFiles = Fc.getSelectedFiles();
            File Fa = Fc.getSelectedFile();
            Row = Fa.getAbsolutePath();
            model.addRow(new Object[]{Row});
             
            try(FileReader fr = new FileReader(Fa))
            {
                String cadena = "";
                int valor = fr.read();
                while(valor != -1)
                {
                    cadena = cadena + (char) valor;
                    valor = fr.read();
                }
                //model.addRow(new Object[]{Row});
            }catch(IOException ex)
            {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton_FilesActionPerformed

    private void jTextField_EmailsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_EmailsKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            DefaultTableModel modelR = (DefaultTableModel) this.jTable_Receivers.getModel();
            modelR.addRow(new Object[]{this.jTextField_Emails.getText()});
            this.jTextField_Emails.setText(null);
            //JOptionPane.showMessageDialog(null, this.jTable_Receivers.getRowCount());
        }
    }//GEN-LAST:event_jTextField_EmailsKeyPressed

    private void jButton_AddCCKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton_AddCCKeyPressed
        // Nothing to do here...
    }//GEN-LAST:event_jButton_AddCCKeyPressed
//End of Direct Message Pane.
//Start of Contacts Pane.
    private void jButton_ContacsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ContacsActionPerformed
        // TODO add your handling code here:
        boolean Add = false;
        if(this.jTextField_AddC.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Write an email");
        }else
        {
            for(int i = 0;i < this.jTable_Contacts.getRowCount();i++)
            {
                if(this.jTable_Contacts.getValueAt(i, 0).toString().equals(this.jTextField_AddC.getText()))
                {
                    JOptionPane.showMessageDialog(null, "That contact have been registered already");
                    Add = false;
                    break;
                }
                Add = true;
            }
            if(Add)
            {
                DefaultTableModel modelC = (DefaultTableModel) this.jTable_Contacts.getModel();
                modelC.addRow(new Object[]{this.jTextField_AddC.getText()});
                this.jTextField_AddC.setText("");
            }
        }
    }//GEN-LAST:event_jButton_ContacsActionPerformed

    private void jTable_ContactsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_ContactsMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable_ContactsMouseClicked

    private void jButton_FilesCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_FilesCActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) this.jTable_FilesC.getModel();
        
        JFileChooser Fc = new JFileChooser();
        String Row = "";
        Fc.setDialogTitle("Files:");
        Fc.setMultiSelectionEnabled(true);
        int R = Fc.showOpenDialog(null);
        if(R == JFileChooser.APPROVE_OPTION)
        {
            selectedFiles = Fc.getSelectedFiles();
            File Fa = Fc.getSelectedFile();
            Row = Fa.getAbsolutePath();
            model.addRow(new Object[]{Row});
             
            try(FileReader fr = new FileReader(Fa))
            {
                String cadena = "";
                int valor = fr.read();
                while(valor != -1)
                {
                    cadena = cadena + (char) valor;
                    valor = fr.read();
                }
                //model.addRow(new Object[]{Row});
            }catch(IOException ex)
            {
                ex.printStackTrace();
            }
        }                  
    }//GEN-LAST:event_jButton_FilesCActionPerformed

    private void jButton_SendCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SendCActionPerformed
        // TODO add your handling code here:
        LogInMenu lim = new LogInMenu();
        EmailSF = lim.EmailLogged;//"tadprgs@gmail.com";
        PassWSF = lim.PasswordLogged;//"jerbeftltmvxfqam";
        //JOptionPane.showMessageDialog(null, EmailSF);
        //JOptionPane.showMessageDialog(null, PassWSF);
        
        if(0 < this.jTable_FilesC.getRowCount())
        {
            if(this.jTable_Contacts.getSelectedRow() != -1)
            {
                for(int i = 0 ; i < this.jTable_Contacts.getRowCount(); i++)
                {
                    if(this.jTable_Contacts.isRowSelected(i))
                    {
                        try
                        {
                            Emails.GmailSender(EmailSF, PassWSF, this.jTextField_SubjectC.getText(),
                            this.jTextArea_MessageC.getText(),
                            this.jTable_Contacts.getValueAt(i, 0).toString(),selectedFiles);
                            DefaultTableModel Mm = (DefaultTableModel) this.jTable_Messages.getModel();
                            Mm.addRow(new Object[]{this.jTable_Contacts.getValueAt(i, 0).toString(),this.jTextField_SubjectC.getText(),
                            this.jTextArea_MessageC.getText(),this.jTable_FilesC.getValueAt(i, 0).toString()});
                        }catch(MessagingException ex)
                        {
                            Logger.getLogger(SenderMenu.class.getName()).log(Level.SEVERE,null,ex);
                        }
                    }
                }
            }else
            {
                JOptionPane.showMessageDialog(null, "Select an email");  
            }
        }else
        {
            if(this.jTable_Contacts.getSelectedRow() != -1)
            {
                for(int i = 0 ; i < this.jTable_Contacts.getRowCount(); i++)
                {
                    if(this.jTable_Contacts.isRowSelected(i))
                    {
                        try
                        {
                            Emails.GmailSender(EmailSF, PassWSF, this.jTextField_SubjectC.getText(),
                            this.jTextArea_MessageC.getText(),
                            this.jTable_Contacts.getValueAt(i, 0).toString());
                            DefaultTableModel Mm = (DefaultTableModel) this.jTable_Messages.getModel();
                            Mm.addRow(new Object[]{this.jTable_Contacts.getValueAt(i, 0).toString(),this.jTextField_SubjectC.getText(),
                            this.jTextArea_MessageC.getText(),this.jTable_FilesC.getValueAt(i, 0).toString()});
                        }catch(MessagingException ex)
                        {
                            Logger.getLogger(SenderMenu.class.getName()).log(Level.SEVERE,null,ex);
                        }
                    }
                }
            }else
            {
                JOptionPane.showMessageDialog(null, "Select an email");  
            }
        }
    }//GEN-LAST:event_jButton_SendCActionPerformed

    private void jTextField_AddCKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_AddCKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
        boolean Add = false;
        if(this.jTextField_AddC.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Write an email");
        }else
        {
            for(int i = 0;i < this.jTable_Contacts.getRowCount();i++)
            {
                if(this.jTable_Contacts.getValueAt(i, 0).toString().equals(this.jTextField_AddC.getText()))
                {
                    JOptionPane.showMessageDialog(null, "That contact have been registered already");
                    Add = false;
                    break;
                }
                Add = true;
            }
            if(Add)
            {
                DefaultTableModel modelC = (DefaultTableModel) this.jTable_Contacts.getModel();
                modelC.addRow(new Object[]{this.jTextField_AddC.getText()});
                this.jTextField_AddC.setText("");
            }
        }
        }
    }//GEN-LAST:event_jTextField_AddCKeyPressed

    private void jButton_EraseCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_EraseCActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelC = (DefaultTableModel) this.jTable_Contacts.getModel();
        if(this.jTable_Contacts.getSelectedRow() != -1)
        {
            modelC.removeRow(this.jTable_Contacts.getSelectedRow());
        }else
        {
            JOptionPane.showMessageDialog(null, "Select the Email you want to erase!");
        }
    }//GEN-LAST:event_jButton_EraseCActionPerformed

    private void jTextArea_MessageCKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea_MessageCKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTextArea_MessageCKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SenderMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SenderMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SenderMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SenderMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SenderMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_AddCC;
    private javax.swing.JButton jButton_Contacs;
    private javax.swing.JButton jButton_EraseC;
    private javax.swing.JButton jButton_EraseCC;
    private javax.swing.JButton jButton_Files;
    private javax.swing.JButton jButton_FilesC;
    private javax.swing.JButton jButton_LOGOUT;
    private javax.swing.JButton jButton_OPTIONS;
    private javax.swing.JButton jButton_SAFELOCK;
    private javax.swing.JButton jButton_SEND;
    private javax.swing.JButton jButton_SendC;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JDesktopPane jDesktopPane3;
    private javax.swing.JDesktopPane jDesktopPane4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable_Contacts;
    private javax.swing.JTable jTable_Files;
    private javax.swing.JTable jTable_FilesC;
    private javax.swing.JTable jTable_Messages;
    private javax.swing.JTable jTable_Receivers;
    private javax.swing.JTextArea jTextArea_Message;
    private javax.swing.JTextArea jTextArea_MessageC;
    private javax.swing.JTextField jTextField_AddC;
    private javax.swing.JTextField jTextField_Emails;
    private javax.swing.JTextField jTextField_Subject;
    private javax.swing.JTextField jTextField_SubjectC;
    // End of variables declaration//GEN-END:variables
}
